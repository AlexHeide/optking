#! SCF CC-PVDZ geometry optimzation, with Z-matrix input

finalEnergy = -150.786766850  #TEST

molecule hooh {
  H
  O 1 0.9
  O 2 1.4 1 100.0
  H 3 0.9 2 100.0 1 170.0
}

set {
  basis cc-pvdz
  g_convergence gau_verytight
  scf_type pk
}
set optking print 3

import Psi4Opt
Psi4Opt.calcName = 'hf'
E = Psi4Opt.Psi4Opt()
compare_values(finalEnergy, E, 8, "Final energy, empirical Hessian")                                #TEST

molecule hooh {
  H
  O 1 0.9
  O 2 1.4 1 100.0
  H 3 0.9 2 100.0 1 170.0
}

set optking full_hess_every 0
reload(Psi4Opt)
Psi4Opt.calcName = 'hf'
E = Psi4Opt.Psi4Opt()
compare_values(finalEnergy, E, 8, "Final energy, initial Hessian")                                #TEST

molecule hooh {
  H
  O 1 0.9
  O 2 1.4 1 100.0
  H 3 0.9 2 100.0 1 170.0
}

set optking full_hess_every 3
reload(Psi4Opt)
Psi4Opt.calcName = 'hf'
E = Psi4Opt.Psi4Opt()
compare_values(finalEnergy, E, 8, "Final energy, every 3rd step Hessian")                                #TEST

molecule hooh {
  H
  O 1 0.9
  O 2 1.4 1 100.0
  H 3 0.9 2 100.0 1 170.0
}

set optking full_hess_every 1
reload(Psi4Opt)
Psi4Opt.calcName = 'hf'
E = Psi4Opt.Psi4Opt()
compare_values(finalEnergy, E, 8, "Final energy, every step Hessian")                                #TEST


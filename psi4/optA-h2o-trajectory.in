#! SCF STO-3G geometry optimzation, with Z-matrix input

nucenergy = 8.9064890670                                                                     #TEST
refenergy = -74.965901192                                                                    #TEST

molecule h2o {
     O
     H 1 1.0
     H 1 1.0 2 104.5
}

set {
  diis false
  basis sto-3g
  e_convergence 10
  d_convergence 10
  scf_type pk
}

set optking trajectory True

import Psi4Opt
Psi4Opt.calcName = 'hf'
trajectory = Psi4Opt.Psi4Opt()
thisenergy = trajectory[-1][0]

compare_values(nucenergy, h2o.nuclear_repulsion_energy(), 3, "Nuclear repulsion energy")    #TEST
compare_values(refenergy, thisenergy, 6, "Reference energy")                                #TEST

print( str(trajectory) )

for s in trajectory:
    print( "%-5d %20.15f" % (len(s[1]), s[0]))
    for atom in range(len(s[1])):
        print( "%5s%15.10f%15.10f%15.10f" % (s[1][atom], s[2][atom][0], s[2][atom][1], s[2][atom][2]))

